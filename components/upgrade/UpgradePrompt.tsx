'use client'

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { subscriptionPlans } from '@/lib/services/stripe'
import { useRouter } from 'next/navigation'

interface UpgradePromptProps {
  currentPlan: string
  feature: string
  onUpgrade?: () => void
}

export function UpgradePrompt({ currentPlan, feature, onUpgrade }: UpgradePromptProps) {
  const router = useRouter()
  
  const getUpgradeMessage = (plan: string, feature: string) => {
    const messages = {
      podcasts: {
        free: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Starter –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ 5 –ø–æ–¥–∫–∞—Å—Ç–æ–≤',
        starter: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Pro –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ 20 –ø–æ–¥–∫–∞—Å—Ç–æ–≤',
        pro: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Agency –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–æ 100+ –ø–æ–¥–∫–∞—Å—Ç–æ–≤'
      },
      charts: {
        free: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Starter –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ø-50 —á–∞—Ä—Ç–æ–≤',
        starter: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Pro –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–æ–ø-200 —á–∞—Ä—Ç–æ–≤',
        pro: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Agency –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —á–∞—Ä—Ç–æ–≤'
      },
      ai_analysis: {
        free: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Pro –¥–ª—è AI-–∞–Ω–∞–ª–∏–∑–∞ –æ–±–ª–æ–∂–µ–∫',
        starter: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Pro –¥–ª—è AI-–∞–Ω–∞–ª–∏–∑–∞ –æ–±–ª–æ–∂–µ–∫'
      },
      api_access: {
        free: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Agency –¥–ª—è API –¥–æ—Å—Ç—É–ø–∞',
        starter: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Agency –¥–ª—è API –¥–æ—Å—Ç—É–ø–∞',
        pro: '–û–±–Ω–æ–≤–∏—Ç–µ—Å—å –¥–æ Agency –¥–ª—è API –¥–æ—Å—Ç—É–ø–∞'
      }
    }
    
    return messages[feature as keyof typeof messages]?.[plan as keyof typeof messages[keyof typeof messages]] || 
           '–û–±–Ω–æ–≤–∏—Ç–µ –ø–ª–∞–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏'
  }

  const getRecommendedPlan = (currentPlan: string, feature: string) => {
    if (feature === 'ai_analysis' || feature === 'api_access') {
      return currentPlan === 'free' || currentPlan === 'starter' ? 'pro' : 'agency'
    }
    
    if (feature === 'podcasts') {
      if (currentPlan === 'free') return 'starter'
      if (currentPlan === 'starter') return 'pro'
      return 'agency'
    }
    
    if (feature === 'charts') {
      if (currentPlan === 'free') return 'starter'
      if (currentPlan === 'starter') return 'pro'
      return 'agency'
    }
    
    return 'starter'
  }

  const recommendedPlan = getRecommendedPlan(currentPlan, feature)
  const planConfig = subscriptionPlans[recommendedPlan as keyof typeof subscriptionPlans]

  const handleUpgrade = () => {
    if (onUpgrade) {
      onUpgrade()
    } else {
      router.push('/billing')
    }
  }

  return (
    <Card className="border-amber-200 bg-amber-50">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <span className="text-amber-600">üîí</span>
          –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–∞
        </CardTitle>
        <CardDescription>
          {getUpgradeMessage(currentPlan, feature)}
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="flex items-center justify-between">
            <div>
              <h4 className="font-semibold">–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π –ø–ª–∞–Ω: {planConfig.name}</h4>
              <p className="text-sm text-gray-600">
                ${planConfig.price / 100}/–º–µ—Å—è—Ü
              </p>
            </div>
            <Badge variant="outline" className="text-amber-600 border-amber-300">
              {planConfig.name}
            </Badge>
          </div>
          
          <div>
            <h5 className="font-medium mb-2">–í–∫–ª—é—á–µ–Ω–æ –≤ –ø–ª–∞–Ω:</h5>
            <ul className="text-sm space-y-1">
              {planConfig.features.slice(0, 3).map((feature: string, index: number) => (
                <li key={index} className="flex items-center gap-2">
                  <span className="text-green-600">‚úì</span>
                  {feature}
                </li>
              ))}
            </ul>
          </div>
          
          <Button onClick={handleUpgrade} className="w-full">
            –û–±–Ω–æ–≤–∏—Ç—å –ø–ª–∞–Ω
          </Button>
        </div>
      </CardContent>
    </Card>
  )
}
