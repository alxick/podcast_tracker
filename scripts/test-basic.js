#!/usr/bin/env node

const BASE_URL = process.env.TEST_URL || 'http://localhost:3000'

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function makeRequest(endpoint, options = {}) {
  const url = `${BASE_URL}${endpoint}`
  const response = await fetch(url, {
    headers: {
      'Content-Type': 'application/json',
      ...options.headers
    },
    ...options
  })
  
  const data = await response.json()
  return { response, data }
}

async function testSearch() {
  console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ–¥–∫–∞—Å—Ç–æ–≤...')
  
  try {
    const { response, data } = await makeRequest('/api/podcasts/search?q=joe rogan&platform=spotify&limit=5')
    
    if (response.ok && data.results && data.results.length > 0) {
      console.log('  ‚úÖ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥–∫–∞—Å—Ç–æ–≤:', data.results.length)
      console.log('  üìù –ü–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', data.results[0].title)
      return data.results[0]
    } else {
      console.log('  ‚ùå –ü–æ–∏—Å–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
      return null
    }
  } catch (error) {
    console.log('  ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error.message)
    return null
  }
}

async function testCharts() {
  console.log('\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Ä—Ç–æ–≤...')
  
  try {
    const { response, data } = await makeRequest('/api/charts?platform=spotify&category=1310&limit=10&country=US')
    
    if (response.ok && data.charts && data.charts.length > 0) {
      console.log('  ‚úÖ –ß–∞—Ä—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', data.charts.length)
      console.log('  üìù –ü–µ—Ä–≤—ã–π –≤ —á–∞—Ä—Ç–µ:', data.charts[0].title)
    } else {
      console.log('  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞—Ä—Ç—ã:', data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
    }
  } catch (error) {
    console.log('  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ä—Ç–æ–≤:', error.message)
  }
}

async function testPodcastDetails(podcast) {
  console.log('\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø–æ–¥–∫–∞—Å—Ç–∞...')
  
  try {
    const { response, data } = await makeRequest(`/api/podcasts/${podcast.id}?episodes=true`)
    
    if (response.ok && data.podcast) {
      console.log('  ‚úÖ –î–µ—Ç–∞–ª–∏ –ø–æ–¥–∫–∞—Å—Ç–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
      console.log('  üìù –ù–∞–∑–≤–∞–Ω–∏–µ:', data.podcast.title)
      console.log('  üìù –ê–≤—Ç–æ—Ä:', data.podcast.author)
      if (data.episodes) {
        console.log('  üìù –≠–ø–∏–∑–æ–¥–æ–≤:', data.episodes.length)
      }
    } else {
      console.log('  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–∫–∞—Å—Ç–∞:', data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
    }
  } catch (error) {
    console.log('  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ—Ç–∞–ª–µ–π –ø–æ–¥–∫–∞—Å—Ç–∞:', error.message)
  }
}

async function testAIAnalysis(podcast) {
  console.log('\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI –∞–Ω–∞–ª–∏–∑–∞...')
  
  try {
    // –ê–Ω–∞–ª–∏–∑ –æ–±–ª–æ–∂–∫–∏
    console.log('  - –ê–Ω–∞–ª–∏–∑ –æ–±–ª–æ–∂–∫–∏ –ø–æ–¥–∫–∞—Å—Ç–∞...')
    const { response: coverResponse, data: coverData } = await makeRequest('/api/ai/analyze-cover', {
      method: 'POST',
      body: JSON.stringify({
        imageUrl: podcast.image_url,
        podcastTitle: podcast.title
      })
    })
    
    if (coverResponse.ok && coverData.analysis) {
      console.log('  ‚úÖ –ê–Ω–∞–ª–∏–∑ –æ–±–ª–æ–∂–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω')
      console.log('  üìù –î–æ–º–∏–Ω–∏—Ä—É—é—â–∏–π —Ü–≤–µ—Ç:', coverData.analysis.colors?.dominant)
      console.log('  üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', coverData.analysis.recommendations?.length || 0)
    } else {
      console.log('  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ–±–ª–æ–∂–∫—É:', coverData.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
    }
    
  } catch (error) {
    console.log('  ‚ùå –û—à–∏–±–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞:', error.message)
  }
}

async function testChartHistory(podcast) {
  console.log('\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ä—Ç–æ–≤...')
  
  try {
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–∫–∞—Å—Ç–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –∏–∑ –ë–î
    const { response: detailsResponse, data: detailsData } = await makeRequest(`/api/podcasts/${podcast.source_id}`)
    
    if (!detailsResponse.ok || !detailsData.podcast) {
      console.log('  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª–∏ –ø–æ–¥–∫–∞—Å—Ç–∞ –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ä—Ç–æ–≤')
      return
    }
    
    const dbPodcastId = detailsData.podcast.id
    const { response, data } = await makeRequest(`/api/charts/${dbPodcastId}/history?days=30`)
    
    if (response.ok && data.history) {
      console.log('  ‚úÖ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ä—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞')
      console.log('  üìù –ó–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏:', data.history.length)
    } else {
      console.log('  ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ä—Ç–æ–≤:', data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
    }
  } catch (error) {
    console.log('  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ä—Ç–æ–≤:', error.message)
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Podcast Tracker API...')
  console.log(`üìç –ë–∞–∑–æ–≤—ã–π URL: ${BASE_URL}`)
  
  // –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
  const podcast = await testSearch()
  if (!podcast) {
    console.log('\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥–∫–∞—Å—Ç')
    return
  }
  
  // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
  await testCharts()
  await testPodcastDetails(podcast)
  await testAIAnalysis(podcast)
  await testChartHistory(podcast)
  
  console.log('\n‚úÖ –ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runTests().catch(console.error)
